FROM alpine:3.20

# Install required PHP extensions and dependencies
RUN apk update && apk upgrade && \
    apk add --no-cache \
        curl \
        less \
        mariadb-client \
        zip \
        unzip \
        libpng \
        shadow \
        php82 \
        php82-fpm \
        php82-pdo \
        php82-mysqli \
        php82-gd \
        php82-curl \
        php82-zip \
        php82-phar \
        php82-iconv \
        php82-dom \
        php82-xml \
        php82-simplexml \
        php82-session \
        php82-tokenizer \
        libpng-dev \
        libjpeg-turbo \
        libjpeg-turbo-dev \
        libzip-dev && \
    docker-php-ext-configure gd --with-jpeg && \
    docker-php-ext-install -j$(nproc) \
        pdo_mysql \
        mysqli \
        gd \
        zip && \
    # Make sure the zip extension is properly installed
    docker-php-ext-enable zip && \
    apk del libpng-dev libjpeg-turbo-dev libzip-dev && \
    rm -rf /var/cache/apk/*

# Create symlinks for php82 to php
RUN ln -s /usr/bin/php82 /usr/bin/php && \
    ln -s /usr/sbin/php-fpm82 /usr/sbin/php-fpm

# Install wp-cli
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x wp-cli.phar && \
    mv wp-cli.phar /usr/local/bin/wp

# Set working directory
WORKDIR /var/www/html/wordpress

# Download and extract WordPress
RUN wp core download --allow-root

# Copy PHP-FPM configuration
COPY ./conf/www.conf /etc/php82/php-fpm.d/www.conf
# Copy wp-config setup script
COPY ./tools/wp-setup.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/wp-setup.sh

# Switch to non-root user
RUN if getent passwd www-data > /dev/null 2>&1; then \
        usermod -u 82 www-data; \
    else \
        adduser -u 82 www-data; \
    fi && \
    chown -R www-data:www-data /var/www/

USER www-data

# Create required directories and set permissions
RUN mkdir -p /var/run/php && \
    chown -R www-data:www-data /var/run/php

CMD ["/usr/local/bin/wp-setup.sh"]