# Base image - using Debian Bullseye (Debian 11)
FROM debian:bullseye

# Run updates and installations first (as root)
RUN apt-get -y update && apt-get -y upgrade
RUN apt-get -y install nginx curl openssl

# Create necessary directories
RUN mkdir -p /etc/nginx/ssl
RUN mkdir -p /var/run/nginx

# Generate SSL certificate
RUN openssl req -x509 -nodes -out /etc/nginx/ssl/inception.crt \
    -keyout /etc/nginx/ssl/inception.key \
    -subj "/C=FR/ST=IDF/L=Paris/O=42/OU=42/CN=jo-tan.42.fr/UID=jo-tan"

# Create required nginx directories and set permissions
RUN mkdir -p /var/lib/nginx/body /var/lib/nginx/proxy /var/lib/nginx/fastcgi && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /run/nginx && \
    if getent group www-data > /dev/null 2>&1; then \
        groupmod -g 4242 www-data; \
    else \
        groupadd -g 4242 www-data; \
    fi && \
    if getent passwd www-data > /dev/null 2>&1; then \
        usermod -u 4242 www-data; \
    else \
        useradd -u 4242 -g www-data www-data; \
    fi && \
    chown -R www-data:www-data /var/lib/nginx && \
    chown -R www-data:www-data /var/log/nginx && \
    chown -R www-data:www-data /var/cache/nginx && \
    chown -R www-data:www-data /etc/nginx/ssl && \
    chown -R www-data:www-data /var/www/html && \
    chown -R www-data:www-data /run && \
    chmod -R 755 /var/lib/nginx && \
    chmod -R 755 /var/cache/nginx && \
    chmod -R 755 /run && \
    chmod -R 755 /etc/nginx/ssl

# Copy configuration
COPY ./conf/nginx.conf /etc/nginx/nginx.conf

# Switch to non-root user
USER www-data

# Start Nginx in foreground
CMD ["nginx", "-g", "daemon off;"]
# daemon off: Runs Nginx in foreground (Docker best practice)